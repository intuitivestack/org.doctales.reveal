<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:dita="http://dita-ot.sourceforge.net" name="dita2reveal" xmlns:if="ant:if" xmlns:unless="ant:unless">
    
    
    <!-- ==================================================
         Extension Points
    -->
    <extension-point id="org.jung.reveal.param" name="Custom parameters"/>
    
    
    <!-- ================================================== 
        Targets
    -->
    
    <target name="dita2reveal" 
            depends="reveal.init,
                     html5.init,
                     build-init,
                     preprocess,
                     html5.topic,
                     html5.map,
                     html5.css,
                     reveal"/>
    
    <target name="reveal.init">
        <echo level="info">*****************************************************************</echo>
        <!-- Fallback to version 4.3.1 if not defined. -->
        <property unless:set="args.reveal.version" name="args.reveal.version" value="4.3.1"/>
        <echo level="info">* args.reveal.version = ${args.reveal.version}</echo>
        
        <!-- Download URL of the reveal.js archive. -->
        <property name="revealDownloadUrl" value="https://github.com/hakimel/reveal.js/archive/${args.reveal.version}.zip"/>
        
        <!-- Filename of the reveal.js archive. -->
        <property name="revealArchiveName" value="${args.reveal.version}.zip"/>
        
        <!-- Directory name of reveal.js that is stored in the downloaded archive. -->
        <property name="revealDirectoryName" value="reveal.js-${args.reveal.version}"/>
        
        <!-- HTML version. Property is required by DITA-OT2.x -->
        <property name="html-version" value="html5"/>
        
        <!-- File extension of the output files -->
        <property name="args.outext" value="html"/>
        
        <!-- Cache directory for reveal.js files. -->
        <condition property="revealCacheDir" value="${user.home}/AppData/Local/DITA/org.jung.reveal">
            <os family="windows"/>
        </condition>
        <condition property="revealCacheDir" value="/tmp/DITA/org.jung.reveal">
            <os family="unix"/>
        </condition>
        
        <!-- Do not generate releated links -->
        <property name="args.rellinks" value="none"/>
        
        <!-- Do not generate a nav-toc (HTML5) -->
        <property name="nav-toc" value="none"/>
        <property name="args.xsl" value="${dita.plugin.org.jung.reveal.dir}/xsl/reveal.xsl"/>
        <property name="root-chunk-override" value="to-content"/>
        
        <condition property="args.reveal.controlsLayout" value="edges">
            <not>
                <isset property="args.reveal.controlsLayout"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.controlsLayout = ${args.reveal.controlsLayout}</echo>
        
        <condition property="args.reveal.controls" value="true">
            <not>
                <isset property="args.reveal.controls"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.controls = ${args.reveal.controls}</echo>
        
        <condition property="args.reveal.progress" value="true">
            <not>
                <isset property="args.reveal.progress"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.progress = ${args.reveal.progress}</echo>
        
        <condition property="args.reveal.slidenumber" value="false">
            <not>
                <isset property="args.reveal.slidenumber"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.slidenumber = ${args.reveal.slidenumber}</echo>
        
        <condition property="args.reveal.history" value="false">
            <not>
                <isset property="args.reveal.history"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.history = ${args.reveal.history}</echo>
        
        <condition property="args.reveal.keyboard" value="true">
            <not>
                <isset property="args.reveal.keyboard"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.keyboard = ${args.reveal.keyboard}</echo>
        
        <condition property="args.reveal.overview" value="true">
            <not>
                <isset property="args.reveal.overview"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.overview = ${args.reveal.overview}</echo>
        
        <condition property="args.reveal.center" value="true">
            <not>
                <isset property="args.reveal.center"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.center = ${args.reveal.center}</echo>
        
        <condition property="args.reveal.touch" value="true">
            <not>
                <isset property="args.reveal.touch"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.touch = ${args.reveal.touch}</echo>
        
        <condition property="args.reveal.loop" value="false">
            <not>
                <isset property="args.reveal.loop"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.loop = ${args.reveal.loop}</echo>
        
        <condition property="args.reveal.rtl" value="false">
            <not>
                <isset property="args.reveal.rtl"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.rtl = ${args.reveal.rtl}</echo>
        
        <condition property="args.reveal.fragments" value="true">
            <not>
                <isset property="args.reveal.fragments"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.fragments = ${args.reveal.fragments}</echo>
        
        <condition property="args.reveal.embedded" value="false">
            <not>
                <isset property="args.reveal.embedded"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.embedded = ${args.reveal.embedded}</echo>
        
        <condition property="args.reveal.autoslide" value="0">
            <not>
                <isset property="args.reveal.autoslide"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.autoslide = ${args.reveal.autoslide}</echo>
        
        <condition property="args.reveal.autoslidestoppable" value="true">
            <not>
                <isset property="args.reveal.autoslidestoppable"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.autoslidestoppable = ${args.reveal.autoslidestoppable}</echo>
        
        <condition property="args.reveal.mousewheel" value="false">
            <not>
                <isset property="args.reveal.mousewheel"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.mousewheel = ${args.reveal.mousewheel}</echo>
        
        <condition property="args.reveal.hideaddressbar" value="true">
            <not>
                <isset property="args.reveal.hideaddressbar"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.hideaddressbar = ${args.reveal.hideaddressbar}</echo>
        
        <condition property="args.reveal.previewlinks" value="false">
            <not>
                <isset property="args.reveal.previewlinks"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.previewlinks = ${args.reveal.previewlinks}</echo>
        
        <condition property="args.reveal.transition" value="default">
            <not>
                <isset property="args.reveal.transition"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.transition = ${args.reveal.transition}</echo>
        
        <condition property="args.reveal.transitionspeed" value="default">
            <not>
                <isset property="args.reveal.transitionspeed"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.transitionspeed = ${args.reveal.transitionspeed}</echo>
        
        <condition property="args.reveal.backgroundtransition" value="default">
            <not>
                <isset property="args.reveal.backgroundtransition"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.backgroundtransition = ${args.reveal.backgroundtransition}</echo>
        
        <condition property="args.reveal.viewdistance" value="3">
            <not>
                <isset property="args.reveal.viewdistance"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.viewdistance = ${args.reveal.viewdistance}</echo>
        
        <condition property="args.reveal.width" value="960">
            <not>
                <isset property="args.reveal.width"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.width = ${args.reveal.width}</echo>
        
        <condition property="args.reveal.height" value="700">
            <not>
                <isset property="args.reveal.height"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.height = ${args.reveal.height}</echo>
        
        <condition property="args.reveal.margin" value="0.1">
            <not>
                <isset property="args.reveal.heimarginght"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.margin = ${args.reveal.margin}</echo>
        
        <condition property="args.reveal.minScale" value="0.2">
            <not>
                <isset property="args.reveal.minScale"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.minScale = ${args.reveal.minScale}</echo>
        
        <condition property="args.reveal.maxScale" value="1.5">
            <not>
                <isset property="args.reveal.maxScale"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.maxScale = ${args.reveal.maxScale}</echo>
        
        <condition property="args.reveal.generate.vertical.slides" value="true">
            <not>
                <isset property="args.reveal.generate.vertical.slides"/>
            </not>
        </condition>
        <echo level="info">* args.reveal.generate.vertical.slides = ${args.reveal.generate.vertical.slides}</echo>
        
        <condition property="reveal.css-and-theme-used">
            <and>
                <isset property="args.reveal.css"/>
                <isset property="args.reveal.theme"/>
            </and>
        </condition>
        <property name="args.reveal.css" value="${dita.plugin.org.jung.reveal.dir}/css/jung.css"/>
        <property name="args.reveal.theme" value="jung"/>
        <echo level="info">* args.reveal.css = ${args.reveal.css}</echo>
        <echo level="info">* args.reveal.theme = ${args.reveal.theme}</echo>
        
        <basename if:set="args.reveal.css" property="reveal.css.filename" file="${args.reveal.css}" suffix=".css" />
        <fail if:set="reveal.css-and-theme-used" message="Property &quot;args.reveal.theme&quot; does not match &quot;args.reveal.css&quot;">
            <condition>
                <and>
                    <not>
                        <equals arg1="${args.reveal.css}" arg2="null"/>
                    </not>
                    <not>
                        <equals arg1="${args.reveal.theme}" arg2="${reveal.css.filename}"/>
                    </not>
                </and>
            </condition>
        </fail>
        
        <!-- Get reveal.js -->
        <mkdir dir="${revealCacheDir}"/>
        <condition property="reveal.archive.available">
            <available file="${revealCacheDir}${file.separator}${revealArchiveName}"/>
        </condition>
        <condition property="reveal-host-available">
            <http url="${revealDownloadUrl}"/>
        </condition>
        <condition property="cannot-get-revealjs">
            <and>
                <not>
                    <isset property="reveal.archive.available"/>
                </not>
                <not>
                    <isset property="reveal-host-available"/>
                </not>
            </and>
        </condition>
        <fail if:set="cannot-get-revealjs">Cannot reach host '${revealDownloadUrl}' to download reveal-js</fail>
        <get
            unless:set="reveal.archive.available"
            verbose="on"
            src="${revealDownloadUrl}"
            dest="${revealCacheDir}"
            skipexisting="true"/>
        <unzip
            src="${revealCacheDir}${file.separator}${revealArchiveName}"
            dest="${revealCacheDir}"/>
    </target>

    <!-- XSLT transformation -->
    <target name="reveal">
        <description>Build XHTML output from dita inner and outer topics, which will adjust the directory.</description>

        
        <pipeline message="Convert DITA topics to reveal.js slides" taskname="xslt">
            <xslt destdir="${dita.output.dir}" reloadstylesheet="${dita.html5.reloadstylesheet}" extension=".html" style="${dita.plugin.org.jung.reveal.dir}/xsl/reveal.xsl" filenameparameter="FILENAME" filedirparameter="FILEDIR" parallel="${parallel}">
                <ditafileset format="dita" processingRole="normal"/>
                <!--<param name="FILTERFILE" expression="${dita.input.valfile.url}" if:set="dita.input.valfile"/>
                <param name="CSS" expression="${args.css.file}" if:set="args.css.file"/>
                <param name="CSSPATH" expression="${user.csspath}" if:set="user.csspath"/>
                <param name="HDF" expression="${args.hdf}" if:set="args.hdf"/>
                <param name="HDR" expression="${args.hdr}" if:set="args.hdr"/>
                <param name="FTR" expression="${args.ftr}" if:set="args.ftr"/>
                <param name="DRAFT" expression="${args.draft}" if:set="args.draft"/>
                <param name="ARTLBL" expression="${args.artlbl}" if:set="args.artlbl"/>
                <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if:set="args.gen.task.lbl"/>
                <param name="PRESERVE-DITA-CLASS" expression="${args.html5.classattr}" if:set="args.html5.classattr"/>
                <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if:set="args.hide.parent.link"/>
                <param name="include.rellinks" expression="${include.rellinks}"/>
                <param name="INDEXSHOW" expression="${args.indexshow}" if:set="args.indexshow"/>
                <param name="genDefMeta" expression="${args.gen.default.meta}" if:set="args.gen.default.meta"/>
                <param name="OUTEXT" expression="${out.ext}" if:set="out.ext"/>
                <param name="BASEDIR" expression="${dita.dir}"/>
                <param name="OUTPUTDIR" expression="${dita.output.dir}"/>
                <param name="defaultLanguage" expression="${default.language}"/>-->
                <param name="TRANSTYPE" expression="${transtype}"/>
                <param name="DITAEXT" expression="${dita.ext}" if:set="dita.ext"/>
                <param name="FILTERFILE" expression="${dita.input.valfile.url}" if:set="dita.input.valfile"/>
                <param name="CSS" expression="${args.css.file}" if:set="args.css.file"/>
                <param name="CSSPATH" expression="${user.csspath}" if:set="user.csspath"/>
                <param name="HDF" expression="${args.hdf}" if:set="args.hdf"/>
                <param name="HDR" expression="${args.hdr}" if:set="args.hdr"/>
                <param name="FTR" expression="${args.ftr}" if:set="args.ftr"/>
                <param name="DRAFT" expression="${args.draft}" if:set="args.draft"/>
                <param name="ARTLBL" expression="${args.artlbl}" if:set="args.artlbl"/>
                <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if:set="args.gen.task.lbl"/>
                <param name="PRESERVE-DITA-CLASS" expression="${args.xhtml.classattr}" if:set="args.xhtml.classattr"/>
                <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if:set="args.hide.parent.link"/>
                <param name="include.rellinks" expression="${include.rellinks}"/>
                <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if:set="args.breadcrumbs"/>
                <param name="INDEXSHOW" expression="${args.indexshow}" if:set="args.indexshow"/>
                <param name="genDefMeta" expression="${args.gen.default.meta}" if:set="args.gen.default.meta"/>
                <param name="OUTEXT" expression=".${args.outext}" if:set="out.ext"/>
                <param name="BASEDIR" expression="${basedir}"/>
                <param name="OUTPUTDIR" expression="${output.dir}"/>
                <param name="DBG" expression="${args.debug}" if:set="args.debug"/>
                <param name="DEFAULTLANG" expression="${args.default.language}" if:set="args.default.language"/>
                
                <!-- reveal.js parameters -->
                <param name="args.reveal.autoslide" expression="${args.reveal.autoslide}" if:set="args.reveal.autoslide"/>
                <param name="args.reveal.autoslidestoppable" expression="${args.reveal.autoslidestoppable}" if:set="args.reveal.autoslidestoppable"/>
                <param name="args.reveal.backgroundtransition" expression="${args.reveal.backgroundtransition}" if:set="args.reveal.backgroundtransition"/>
                <param name="args.reveal.center" expression="${args.reveal.center}" if:set="args.reveal.center"/>
                <param name="args.reveal.controls" expression="${args.reveal.controls}" if:set="args.reveal.controls"/>
                <param name="args.reveal.controlsLayout" expression="${args.reveal.controlsLayout}" if:set="args.reveal.controlsLayout"/>
                <param name="args.reveal.css" expression="${args.reveal.css}" if:set="args.reveal.css"/>
                <param name="args.reveal.embedded" expression="${args.reveal.embedded}" if:set="args.reveal.embedded"/>
                <param name="args.reveal.fragments" expression="${args.reveal.fragments}" if:set="args.reveal.fragments"/>
                <param name="args.reveal.generate.vertical.slides" expression="${args.reveal.generate.vertical.slides}" if:set="args.reveal.generate.vertical.slides"/>
                <param name="args.reveal.height" expression="${args.reveal.height}" if:set="args.reveal.height"/>
                <param name="args.reveal.hideaddressbar" expression="${args.reveal.hideaddressbar}" if:set="args.reveal.hideaddressbar"/>
                <param name="args.reveal.history" expression="${args.reveal.history}" if:set="args.reveal.history"/>
                <param name="args.reveal.keyboard" expression="${args.reveal.keyboard}" if:set="args.reveal.keyboard"/>
                <param name="args.reveal.loop" expression="${args.reveal.loop}" if:set="args.reveal.loop"/>
                <param name="args.reveal.margin" expression="${args.reveal.margin}" if:set="args.reveal.margin"/>
                <param name="args.reveal.maxScale" expression="${args.reveal.maxScale}" if:set="args.reveal.maxScale"/>
                <param name="args.reveal.minScale" expression="${args.reveal.minScale}" if:set="args.reveal.minScale"/>
                <param name="args.reveal.mousewheel" expression="${args.reveal.mousewheel}" if:set="args.reveal.mousewheel"/>
                <param name="args.reveal.overview" expression="${args.reveal.overview}" if:set="args.reveal.overview"/>
                <param name="args.reveal.parallaxbackgroundimage" expression="${args.reveal.parallaxbackgroundimage}" if:set="args.reveal.parallaxbackgroundimage"/>
                <param name="args.reveal.parallaxbackgroundsize" expression="${args.reveal.parallaxbackgroundsize}" if:set="args.reveal.parallaxbackgroundsize"/>
                <param name="args.reveal.previewlinks" expression="${args.reveal.previewlinks}" if:set="args.reveal.previewlinks"/>
                <param name="args.reveal.progress" expression="${args.reveal.progress}" if:set="args.reveal.progress"/>
                <param name="args.reveal.rtl" expression="${args.reveal.rtl}" if:set="args.reveal.rtl"/>
                <param name="args.reveal.slidenumber" expression="${args.reveal.slidenumber}" if:set="args.reveal.slidenumber"/>
                <param name="args.reveal.theme" expression="${args.reveal.theme}" if:set="args.reveal.theme"/>
                <param name="args.reveal.touch" expression="${args.reveal.touch}" if:set="args.reveal.touch"/>
                <param name="args.reveal.transition" expression="${args.reveal.transition}" if:set="args.reveal.transition"/>
                <param name="args.reveal.transitionspeed" expression="${args.reveal.transitionspeed}" if:set="args.reveal.transitionspeed"/>
                <param name="args.reveal.viewdistance" expression="${args.reveal.viewdistance}" if:set="args.reveal.viewdistance"/>
                <param name="args.reveal.width" expression="${args.reveal.width}" if:set="args.reveal.width"/>
                <!--<params/>-->
            </xslt>
        </pipeline>
        
        <echo if:set="args.reveal.css" level="info">Copy ${args.reveal.css} to ${output.dir}${file.separator}dist${file.separator}theme</echo>
        <copy if:set="args.reveal.css" file="${args.reveal.css}" todir="${output.dir}${file.separator}dist${file.separator}theme" failonerror="false"/>
        
        <!-- Copy reveal.js -->
        <copy todir="${output.dir}" failonerror="true">
            <fileset dir="${revealCacheDir}${file.separator}${revealDirectoryName}"/>
        </copy>
        
        <!-- Obsolete -->
        <!-- Copy JQuery -->
        <!--<copy todir="${output.dir}${file.separator}js" failonerror="true">
            <fileset dir="${dita.plugin.org.jung.reveal.dir}/js">
                <include name="jquery-*.min.js"/>
            </fileset>
        </copy>-->
        
        <!-- Replace index.html -->
        <delete file="${output.dir}${file.separator}index.html"/>
        <echo level="info">args.input = ${args.input}</echo>
        <!-- For whatever reason I cannot remove the suffix with the basename task anymore -->
        <basename property="dita.input.filename" file="${args.input}"/>
        <echo level="info">dita.input.filename = ${dita.input.filename}</echo>
        <loadresource property="dita.input.filename.nosuffix">
            <propertyresource name="dita.input.filename"/>
            <filterchain>
                <tokenfilter>
                    <filetokenizer/>
                    <replaceregex pattern=".ditamap" replace=""/>
                </tokenfilter>
            </filterchain>
        </loadresource> 
        <echo level="info">dita.input.filename.nosuffix = ${dita.input.filename.nosuffix}</echo>
        <condition property="presentation-html-available" value="true">
            <available file="${output.dir}${file.separator}${dita.input.filename.nosuffix}.html"/>
        </condition>
        <echo unless:set="presentation-html-available" level="warning">${output.dir}${file.separator}${dita.input.filename.nosuffix}.html not found</echo>
        <echo if:set="presentation-html-available" level="info">Move "${output.dir}${file.separator}${dita.input.filename.nosuffix}.html" to "${output.dir}${file.separator}index.html"</echo>
        <move if:set="presentation-html-available" file="${output.dir}${file.separator}${dita.input.filename.nosuffix}.html" tofile="${output.dir}${file.separator}index.html"/>
        <delete if:set="presentation-html-available" dir="${output.dir}${file.separator}test"/>
    </target>
    
</project>
